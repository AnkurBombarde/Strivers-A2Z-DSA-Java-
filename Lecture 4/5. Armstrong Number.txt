Problem Statement: Given an integer N, return true it is an Armstrong number otherwise return false.

Definition: An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the number of digits

Example 1:
Input:N = 153
Output:True

Example 2:
Input:N = 371
Output: True

Algorithm: 

Step 1:Calculate the number of digits in the input number and store it in k.

Step 2: Initialise a variable sum to 0. This variable will store the sum of each digit raised to the power of number of digits in number.

  Make a copy of the original number to store it in a temporary variable.

Step 3: Run a while loop with the condition n>0 and at each iteration:

  Get the last digit of n by using the modulus operator % with 10 and store it in a temporary variable ld.
  Add the digit ld raised to the power of k of the sum.
  Update n by integer division with 10 effectively removing the last digit.

Step 4: After the loop, check if the original input number is equal to the sum of the digits raised to the power of the number of digits in the number.

  If they are equal, return true indicating the number is an Armstrong number.
  If they are not equal, return false indicating that the number is not an Armstrong number.


Code: 

                            
import java.lang.Math;

public class ArmstrongNumber {
    // Function to check if a number is an Armstrong number
    public static boolean isArmstrong(int num) {
        // Calculate the number of digits in the given number
        int k = String.valueOf(num).length();
        // Initialize the sum of digits raised to the power of k to 0
        int sum = 0;
        // Copy the value of the input number to a temporary variable n
        int n = num;
        // Iterate through each digit of the number
        while(n > 0){
            // Extract the last digit of the number
            int ld = n % 10;
            // Add the digit raised to the power of k to the sum
            sum += Math.pow(ld, k); 
            // Remove the last digit from the number
            n = n / 10;
        }
        // Check if the sum of digits raised to the power of k equals the original number
        return sum == num ? true : false;
    }

    public static void main(String[] args) {
        int number = 153;
        if (isArmstrong(number)) {
            System.out.println(number + " is an Armstrong number.");
        } else {
            System.out.println(number + " is not an Armstrong number.");
        }
    }
}

Approach:

1. Armstrong Number Definition
    for a given number n with k digits, the numebr is an Armstrong number if:
    n=d1^k+d2^k+d3^k+....+dk^k 

    where d1, d2, d3,....,dk are the digits of the number


2. Algorithm steps:
    Calculate the number of digits k in the given number.
    Iterate through each digit of the number , raising each digit to the power of k and summing these values.
    Compare the sum to the original number to determine is it is an Armstrong number.
                            
                        
