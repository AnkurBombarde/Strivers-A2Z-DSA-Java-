Problem: Print from N to 1 using Recursion

    Since in this problem, there is no global variable that can be decremented each time we call a function, how can we keep a track of the number of integers being printed on the output screen?
    For this problem, we’re going to be using a function along with parameters that get decremented with each function call through which we can keep track of the integer count while printing.
    To better understand this problem, following is the psuedo code:

void func( i, n )
{
   if(i<1) return;
 print(i);
   f( i-1,N );
}
main()
{
  int n;
  input(n);
  f(n,n);
}

Code:
public class Recursion {

    static void func(int i, int n) {
        // Base Condition
        if (i < 1) return;
        System.out.println(i);

        // Function call to print i till i decrements to 1
        func(i - 1, n);
    }

    public static void main(String[] args) {
        // Here, let’s take the value of n to be 4.
        int n = 4;
        func(n, n);
    }
}

Alternate Approach for printing integers from N to 1 (using Backtracking)

This is an alternative approach for printing the integers from N to 1 using recursion. In the previous approach, we used forward recursion but in this approach, we will be using backward recursion. The only change from the previous approach here will be that the print line would be kept after the function call inside the recursive function contrary to the previous approach. The function would be called for printing (i+1) integers and the ith integer would be printed.
Following is the psuedo code:

void func( i, n )
{
   if(i>n) return;
 f( i+1,N );
print(i);

}
main()
{
  int n;
  input(n);
  f(1,n);
}

Code:
public class Recursion {

    static void func(int i, int n) {
        // Base Condition
        if (i > n) return;

        // Function call to print (i+1) integers
        func(i + 1, n);
        System.out.println(i);
    }

    public static void main(String[] args) {
        // Here, let’s take the value of n to be 4.
        int n = 4;
        func(1, n);
    }
}

