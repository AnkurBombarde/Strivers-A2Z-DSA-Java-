/*
-> Input and output operations enable Java programs to interact with users, making it possible to create user-friendly applications with graphical interfaces or command-line interfaces.
->Input allows programs to obtain data from various sources, such as users, files, or external devices. This data can be used for processing, analysis, or storage.
-> output enables programs to present results or information to users in a readable and meaningful format. This is essential for displaying data, reports, or graphical visualizations.
-> Java offers two input methods, Scanner and BufferedReader. Scanner simplifies console input for common use cases, providing easy-to-use methods for various data types. BufferedReader, offers greater control and efficiency, making it suitable for complex input scenarios and handling large volumes of data, such as reading from files or network streams. 
-> To perform tasks like input and output, we include library which is java.util, which includes scanner class
-> The Scanner class is a workhorse for handling inputs, allowing to read data from the keyboard or other sources
-> Following below is the sample code for basic input and output 
 */

/**
 * Main
 */
/* 
import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter a number: ");
        int n=sc.nextInt();
        System.out.println(n+" was takes as an input");
        sc.close();
    }
}
*/
/*Ouput
Enter a number:
11
11 was takes as an input
 */
/* 
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
    public static void main(String[] args) {
        
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        try {
            System.out.print("Enter your name: ");
            String name = reader.readLine(); 

            System.out.print("Enter your age: ");
            int age = Integer.parseInt(reader.readLine()); 

            System.out.println("Hello, " + name + "! You are " + age + " years old.");
        } catch (IOException e) {
            System.err.println("Error reading input: " + e.getMessage());
        } finally {
            try {
                reader.close(); 
            } catch (IOException e) {
                System.err.println("Error closing BufferedReader: " + e.getMessage());
            }
        }
        
    }
}
*/
/*Output
Enter your name: Ankur
Enter your age: 20
Hello, Ankur! You are 20 years old.
 */