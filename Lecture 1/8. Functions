A function (or method) is a block of code that performs a specific task.
It encapsulates a set of instructions that can be called (invoked) from other parts of the program.
Functions allow you to break down complex logic into smaller, manageable pieces.

Function Declaration and Syntax:
To declare a function, you need to specify its name, return type (if any), and parameters (if any).
Syntax:


returnType functionName(parameters) {
    // Code to be executed
    // (optional) return value;
}

Function Components:
Return Type: Specifies the type of value the function returns (if any). Use void if the function doesnâ€™t return anything.
Function Name: A unique identifier for the function.
Parameters: Input values passed to the function (optional).
Method Body: The actual code inside the function.
Example: Simple Function:


public class ExampleFunctions {
    // A simple function that prints a message
    static void greetUser() {
        System.out.println("Hello, user!");
    }

    public static void main(String[] args) {
        greetUser(); // Call the function
    }
}

Function Calling (Invoking):
To use a function, call it from another part of the program.
Use the function name followed by parentheses: functionName();
Function Parameters:
Functions can accept input values (parameters) to perform specific tasks.


static void printSum(int a, int b) {
    System.out.println("Sum: " + (a + b));
}

Function Return Value:
If a function returns a value, specify the return type (other than void).
Example:


static int add(int x, int y) {
    return x + y;
}

Built-in Functions:
Java provides many built-in functions (e.g., System.out.println(), Math.sqrt(), etc.).
You can also create your own custom functions.

Function Overloading:
You can define multiple functions with the same name but different parameter lists (overloaded functions).
Java determines which function to call based on the arguments provided.